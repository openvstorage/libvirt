From: Andrea Bolognani <abologna@redhat.com>
Date: Mon, 9 May 2016 15:38:55 +0200
Subject: [PATCH 2/5] qemu: Automatically choose usable GIC version

When the <gic/> element in not present in the domain XML, use the
domain capabilities to figure out what GIC version is usable and
choose that one automatically.

This allows guests to be created on hardware that only supports
GIC v3 without having to update virt-manager and similar tools.

Keep using the default GIC version if the <gic/> element has been
added to the domain XML but no version has been specified, as not
to break existing guests.

Origin: https://libvirt.org/git/?p=libvirt.git;a=commit;h=1a012c9a51e677410fa8219042a1830fb47e9e9a
Bug-Ubuntu: http://bugs.launchpad.net/bugs/1566564
Last-Updated: 2016-05-19

Index: libvirt-1.3.1/src/qemu/qemu_domain.c
===================================================================
--- libvirt-1.3.1.orig/src/qemu/qemu_domain.c
+++ libvirt-1.3.1/src/qemu/qemu_domain.c
@@ -1219,25 +1219,42 @@ qemuDomainDefAddDefaultDevices(virDomain
 /**
  * qemuDomainDefEnableDefaultFeatures:
  * @def: domain definition
+ * @qemuCaps: QEMU capabilities
  *
  * Make sure that features that should be enabled by default are actually
  * enabled and configure default values related to those features.
  */
 static void
-qemuDomainDefEnableDefaultFeatures(virDomainDefPtr def)
+qemuDomainDefEnableDefaultFeatures(virDomainDefPtr def,
+                                   virQEMUCapsPtr qemuCaps)
 {
-    switch (def->os.arch) {
-    case VIR_ARCH_ARMV7L:
-    case VIR_ARCH_AARCH64:
-        if (STREQ(def->os.machine, "virt") ||
-            STRPREFIX(def->os.machine, "virt-")) {
-            /* GIC is always available to ARM virt machines */
-            def->features[VIR_DOMAIN_FEATURE_GIC] = VIR_TRISTATE_SWITCH_ON;
+    virGICVersion version;
+
+    /* The virt machine type always uses GIC: if the relevant element
+     * was not included in the domain XML, we need to choose a suitable
+     * GIC version ourselves */
+    if (def->features[VIR_DOMAIN_FEATURE_GIC] == VIR_TRISTATE_SWITCH_ABSENT &&
+        (def->os.arch == VIR_ARCH_ARMV7L || def->os.arch == VIR_ARCH_AARCH64) &&
+        (STREQ(def->os.machine, "virt") ||
+	 STRPREFIX(def->os.machine, "virt-"))) {
+
+        VIR_DEBUG("Looking for usable GIC version in domain capabilities");
+        for (version = VIR_GIC_VERSION_LAST - 1;
+             version > VIR_GIC_VERSION_NONE;
+             version--) {
+            if (virQEMUCapsSupportsGICVersion(qemuCaps,
+                                              def->virtType,
+                                              version)) {
+                VIR_DEBUG("Using GIC version %s",
+                          virGICVersionTypeToString(version));
+                def->gic_version = version;
+                break;
+            }
         }
-        break;
 
-    default:
-        break;
+        /* Even if we haven't found a usable GIC version in the domain
+         * capabilities, we still want to enable this */
+        def->features[VIR_DOMAIN_FEATURE_GIC] = VIR_TRISTATE_SWITCH_ON;
     }
 
     /* Use the default GIC version if no version was specified */
@@ -1298,7 +1315,7 @@ qemuDomainDefPostParse(virDomainDefPtr d
     if (qemuCanonicalizeMachine(def, qemuCaps) < 0)
         goto cleanup;
 
-    qemuDomainDefEnableDefaultFeatures(def);
+    qemuDomainDefEnableDefaultFeatures(def, qemuCaps);
 
     if (virSecurityManagerVerify(driver->securityManager, def) < 0)
         goto cleanup;
